-- MySQL Script generated by MySQL Workbench
-- Tue Jul 13 12:04:43 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema bands
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema bands
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bands` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `bands` ;

-- -----------------------------------------------------
-- Table `bands`.`band`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bands`.`band` (
  `idband` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idband`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bands`.`member`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bands`.`member` (
  `idmember` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `birth_date` DATE NOT NULL,
  `nickname` VARCHAR(45) NULL,
  `band_idband` INT NOT NULL,
  PRIMARY KEY (`idmember`, `band_idband`),
  INDEX `fk_member_band1_idx` (`band_idband` ASC) VISIBLE,
  CONSTRAINT `fk_member_band1`
    FOREIGN KEY (`band_idband`)
    REFERENCES `bands`.`band` (`idband`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bands`.`record_label`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bands`.`record_label` (
  `idrecord_label` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `founding` DATE NULL,
  `location` VARCHAR(45) NULL,
  PRIMARY KEY (`idrecord_label`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bands`.`album`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bands`.`album` (
  `idalbum` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `release_date` DATE NOT NULL,
  `length` VARCHAR(6) NULL,
  `genre` VARCHAR(45) NULL,
  `band_idband` INT NOT NULL,
  `record_label_idrecord_label` INT NOT NULL,
  PRIMARY KEY (`idalbum`, `band_idband`, `record_label_idrecord_label`),
  INDEX `fk_album_band_idx` (`band_idband` ASC) VISIBLE,
  INDEX `fk_album_record_label1_idx` (`record_label_idrecord_label` ASC) VISIBLE,
  CONSTRAINT `fk_album_band`
    FOREIGN KEY (`band_idband`)
    REFERENCES `bands`.`band` (`idband`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_album_record_label1`
    FOREIGN KEY (`record_label_idrecord_label`)
    REFERENCES `bands`.`record_label` (`idrecord_label`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bands`.`song`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bands`.`song` (
  `idsong` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `length` VARCHAR(6) NULL,
  `genre` VARCHAR(45) NULL,
  `album_idalbum` INT NOT NULL,
  `album_band_idband` INT NOT NULL,
  PRIMARY KEY (`idsong`, `album_idalbum`, `album_band_idband`),
  INDEX `fk_song_album1_idx` (`album_idalbum` ASC, `album_band_idband` ASC) VISIBLE,
  CONSTRAINT `fk_song_album1`
    FOREIGN KEY (`album_idalbum` , `album_band_idband`)
    REFERENCES `bands`.`album` (`idalbum` , `band_idband`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bands`.`instrument`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bands`.`instrument` (
  `idinstrument` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `nickname` VARCHAR(45) NULL,
  PRIMARY KEY (`idinstrument`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bands`.`member_plays_instrument`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bands`.`member_plays_instrument` (
  `member_idmember` INT NOT NULL,
  `member_band_idband` INT NOT NULL,
  `instrument_idinstrument` INT NOT NULL,
  PRIMARY KEY (`member_idmember`, `member_band_idband`, `instrument_idinstrument`),
  INDEX `fk_member_has_instrument_instrument1_idx` (`instrument_idinstrument` ASC) VISIBLE,
  INDEX `fk_member_has_instrument_member1_idx` (`member_idmember` ASC, `member_band_idband` ASC) VISIBLE,
  CONSTRAINT `fk_member_has_instrument_member1`
    FOREIGN KEY (`member_idmember` , `member_band_idband`)
    REFERENCES `bands`.`member` (`idmember` , `band_idband`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_member_has_instrument_instrument1`
    FOREIGN KEY (`instrument_idinstrument`)
    REFERENCES `bands`.`instrument` (`idinstrument`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
